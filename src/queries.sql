-- Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
-- Таблицы: Н_ТИПЫ_ВЕДОМОСТЕЙ, Н_ВЕДОМОСТИ.
-- Вывести атрибуты: Н_ТИПЫ_ВЕДОМОСТЕЙ.ИД, Н_ВЕДОМОСТИ.ДАТА.
-- Фильтры (AND):
-- a) Н_ТИПЫ_ВЕДОМОСТЕЙ.НАИМЕНОВАНИЕ > Ведомость.
-- b) Н_ВЕДОМОСТИ.ДАТА = 1998-01-05.
-- Вид соединения: INNER JOIN.
SELECT Н_ТИПЫ_ВЕДОМОСТЕЙ.ИД, Н_ВЕДОМОСТИ.ДАТА
  FROM Н_ТИПЫ_ВЕДОМОСТЕЙ
 INNER JOIN Н_ВЕДОМОСТИ
    ON Н_ВЕДОМОСТИ.ТВ_ИД = Н_ТИПЫ_ВЕДОМОСТЕЙ.ИД
 WHERE Н_ТИПЫ_ВЕДОМОСТЕЙ.НАИМЕНОВАНИЕ > 'Ведомость'
   AND Н_ВЕДОМОСТИ.ДАТА = '1998-01-05';

-- Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
-- Таблицы: Н_ЛЮДИ, Н_ВЕДОМОСТИ, Н_СЕССИЯ.
-- Вывести атрибуты: Н_ЛЮДИ.ОТЧЕСТВО, Н_ВЕДОМОСТИ.ДАТА, Н_СЕССИЯ.УЧГОД.
-- Фильтры (AND):
-- a) Н_ЛЮДИ.ИД > 100012.
-- b) Н_ВЕДОМОСТИ.ДАТА = 1998-01-05.
-- c) Н_СЕССИЯ.УЧГОД < 2011/2012.
-- Вид соединения: INNER JOIN.
SELECT Н_ЛЮДИ.ОТЧЕСТВО, Н_ВЕДОМОСТИ.ДАТА, Н_СЕССИЯ.УЧГОД
  FROM Н_ЛЮДИ
 INNER JOIN Н_ВЕДОМОСТИ
    ON Н_ВЕДОМОСТИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
 INNER JOIN Н_СЕССИЯ
    ON Н_СЕССИЯ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
 WHERE Н_ЛЮДИ.ИД > 100012
   AND Н_ВЕДОМОСТИ.ДАТА = '1998-01-05'
   AND Н_СЕССИЯ.УЧГОД < '2011/2012';

-- Составить запрос, который ответит на вопрос, есть ли среди студентов группы 3102 те, кто не имеет отчества.
SELECT CASE count(*) > 0 -- returns the number of rows in a table satisfying
       WHEN TRUE THEN 'Есть'
                 ELSE 'Нет'
       END AS СТУДЕНТ_БЕЗ_ОТЧЕСТВА
  FROM Н_УЧЕНИКИ
 INNER JOIN Н_ЛЮДИ
    ON Н_ЛЮДИ.ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
   AND Н_ЛЮДИ.ОТЧЕСТВО IS NULL
 WHERE Н_УЧЕНИКИ.ГРУППА = '3102';

-- Выдать различные имена студентов и число людей с каждой из этих имен, ограничив список именами, встречающимися
-- более 50 раз на ФКТИУ.
-- Для реализации использовать соединение таблиц.
SELECT Н_ЛЮДИ.ИМЯ, count(*) AS ЧИСЛО_ЛЮДЕЙ
  FROM Н_ЛЮДИ
 INNER JOIN Н_УЧЕНИКИ ON Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
 INNER JOIN Н_ПЛАНЫ ON Н_ПЛАНЫ.ИД = Н_УЧЕНИКИ.ПЛАН_ИД
 INNER JOIN Н_ОТДЕЛЫ ON Н_ОТДЕЛЫ.ИД = Н_ПЛАНЫ.ОТД_ИД
   AND Н_ОТДЕЛЫ.КОРОТКОЕ_ИМЯ = 'КТиУ'
 GROUP BY Н_ЛЮДИ.ИМЯ
HAVING count(*) > 50;

-- Выведите таблицу со средним возрастом студентов во всех группах (Группа, Средний возраст), где средний возраст
-- больше среднего возраста в группе 3100.
SELECT Н_УЧЕНИКИ.ГРУППА, avg(extract(year from age(ДАТА_РОЖДЕНИЯ))) AS СРЕДНИЙ_ВОЗРАСТ
  FROM Н_УЧЕНИКИ
 INNER JOIN Н_ЛЮДИ
    ON Н_ЛЮДИ.ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
 GROUP BY Н_УЧЕНИКИ.ГРУППА
HAVING avg(extract(year from age(ДАТА_РОЖДЕНИЯ))) > (
       SELECT avg(extract(year from age(ДАТА_РОЖДЕНИЯ)))
         FROM Н_ЛЮДИ
        INNER JOIN Н_УЧЕНИКИ
           ON Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
        WHERE Н_УЧЕНИКИ.ГРУППА = '3100'
);

-- Получить список студентов, зачисленных ровно первого сентября 2012 года на первый курс очной формы обучения.
-- В результат включить:
--  - номер группы;
--  - номер, фамилию, имя и отчество студента;
--  - номер и состояние пункта приказа;
-- Для реализации использовать соединение таблиц.
SELECT Н_УЧЕНИКИ.ГРУППА, Н_УЧЕНИКИ.ИД,
       Н_ЛЮДИ.ФАМИЛИЯ, Н_ЛЮДИ.ИМЯ, Н_ЛЮДИ.ОТЧЕСТВО,
       Н_УЧЕНИКИ.П_ПРКОК_ИД, Н_УЧЕНИКИ.СОСТОЯНИЕ
  FROM Н_УЧЕНИКИ
 INNER JOIN Н_ЛЮДИ
    ON Н_ЛЮДИ.ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
 INNER JOIN Н_ПЛАНЫ
    ON Н_ПЛАНЫ.ИД = Н_УЧЕНИКИ.ПЛАН_ИД
   AND Н_ПЛАНЫ.КУРС = 1
 INNER JOIN Н_ФОРМЫ_ОБУЧЕНИЯ
    ON Н_ФОРМЫ_ОБУЧЕНИЯ.ИД = Н_ПЛАНЫ.ФО_ИД
   AND Н_ФОРМЫ_ОБУЧЕНИЯ.НАИМЕНОВАНИЕ = 'Очная'
 WHERE Н_УЧЕНИКИ.НАЧАЛО = '2012-09-01'::timestamp;

-- Сформировать запрос для получения числа в группе №3100 троечников.
WITH ТРОЕЧНИКИ_3100 AS (
  SELECT Н_УЧЕНИКИ.ИД
    FROM Н_УЧЕНИКИ
   INNER JOIN Н_ВЕДОМОСТИ USING (ЧЛВК_ИД)
   WHERE Н_УЧЕНИКИ.ГРУППА = '3100'
     AND Н_ВЕДОМОСТИ.ОЦЕНКА = '3'
   GROUP BY Н_УЧЕНИКИ.ИД
) SELECT count(*) AS КОЛИЧЕСВО_ТРОЕЧНИКОВ_3100
    FROM ТРОЕЧНИКИ_3100;